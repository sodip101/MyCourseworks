/**
 *This is the App class which contains the codes for the UI, data validation and action perform methods
 * 
 * @author Sodip Bikram Thapa, Aaryan Shrestha, Meru Sangroula
 * @date 2020-01-17
 */

//These are the libraries that are used in this class
import java.awt.Desktop;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.util.*;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.*;

public final class App extends javax.swing.JFrame {
    LinkedList<DataModel>LL=new LinkedList<>();
    /**
     * Creates new form App
     */
    public App() {
        initComponents(); //this method initializes all the components of the UI
        //inserting default values in the table
        LL.add(0,new DataModel(1,"Harry Potter and The Sorcerer's Stone","JK Rowling","Hard Cover","Fantasy","Penguin",500));
        LL.add(1,new DataModel(2,"Harry Potter and The Prisoner of Azkaban","JK Rowling","Hard Cover","Fantasy","Penguin",900));
        LL.add(2,new DataModel(3,"Salem's Lot","Stephen King","Paperback","Horror","Vintage",600));
        LL.add(3,new DataModel(4,"Norwegian Wood","Haruki Murakami","Paperback","Romance","Vintage",900));
        LL.add(4,new DataModel(5,"Sputnik Sweetheart","Haruki Murakami","Paperback","Drama","Vintage",700));
        LL.add(5,new DataModel(6,"The Road","Cormac McCarthy","Hard Cover","Thriller","Penguin",800));
        LL.add(6,new DataModel(7,"Murder on the Orient Express","Agatha Christie","Paperback","Thriller","Harper Collins",650));
        LL.add(7,new DataModel(8,"And Then There Were None","Agatha Christie","Paperback","Thriller","Harper Collins",550));
        LL.add(8,new DataModel(9,"The ABC Murders","Agatha Christie","Paperback","Thriller","Harper Collins",750));
        LL.add(9,new DataModel(10,"The Murder of Roger Ackryod","Agatha Christie","Paperback","Thriller","Harper Collins",850));
        LL.add(10,new DataModel(11,"1984","George Orwell","Paperback","Thriller","Penguin",650));
        LL.add(11,new DataModel(12,"Crime and Punishment","Fyodor Dostoyevsky","Paperback","Drama","Penguin",550));
        
        for (int i = 0; i <LL.size(); i++){
            int bookID = LL.get(i).getBookID();
            String bookName = LL.get(i).getBookName();
            String author = LL.get(i).getAuthor();
            String bookType= LL.get(i).getBookType();
            String genre= LL.get(i).getGenre();
            String publication= LL.get(i).getPublication();
            double price = LL.get(i).getPrice();
            Object[] rowData = {bookID,bookName,author,bookType,genre,publication,price};
            tableModel().addRow(rowData);
        }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnGrpType = new javax.swing.ButtonGroup();
        mainPanel = new javax.swing.JPanel();
        txtSearch = new javax.swing.JTextField();
        btnSearchPrice = new javax.swing.JButton();
        cmbSelectGenre = new javax.swing.JComboBox<>();
        btnSearchGenre = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable = new javax.swing.JTable();
        lblAddNewItems = new javax.swing.JLabel();
        newItemsInputPanel = new javax.swing.JPanel();
        lblBookID = new javax.swing.JLabel();
        txtBookID = new javax.swing.JTextField();
        lblBookName = new javax.swing.JLabel();
        txtBookName = new javax.swing.JTextField();
        lblAuthor = new javax.swing.JLabel();
        txtAuthor = new javax.swing.JTextField();
        lblBookType = new javax.swing.JLabel();
        rbtnHardCover = new javax.swing.JRadioButton();
        rbtnPaperback = new javax.swing.JRadioButton();
        lblGenre = new javax.swing.JLabel();
        cmbGenre = new javax.swing.JComboBox<>();
        lblPublication = new javax.swing.JLabel();
        txtPublication = new javax.swing.JTextField();
        lblPrice = new javax.swing.JLabel();
        txtPrice = new javax.swing.JTextField();
        btnAdd = new javax.swing.JButton();
        btnClear = new javax.swing.JButton();
        lblLogo = new javax.swing.JLabel();
        separator = new javax.swing.JSeparator();
        menuBar = new javax.swing.JMenuBar();
        fileMenu = new javax.swing.JMenu();
        fileMenuOpen = new javax.swing.JMenuItem();
        fileMenuExit = new javax.swing.JMenuItem();
        editMenu = new javax.swing.JMenu();
        editMenuDeleteRow = new javax.swing.JMenuItem();
        editMenuClearTable = new javax.swing.JMenuItem();
        helpMenu = new javax.swing.JMenu();
        helpMenuManual = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setLocation(new java.awt.Point(450, 100));

        mainPanel.setBackground(new java.awt.Color(44, 62, 80));

        txtSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSearchActionPerformed(evt);
            }
        });

        btnSearchPrice.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btnSearchPrice.setText("Search by Price");
        btnSearchPrice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchPriceActionPerformed(evt);
            }
        });

        cmbSelectGenre.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Genre", "Horror", "Fantasy", "Drama", "Thriller" }));
        cmbSelectGenre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbSelectGenreActionPerformed(evt);
            }
        });

        btnSearchGenre.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btnSearchGenre.setText("Search by Genre");
        btnSearchGenre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchGenreActionPerformed(evt);
            }
        });

        jTable.setBackground(new java.awt.Color(44, 62, 80));
        jTable.setForeground(new java.awt.Color(255, 255, 255));
        jTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Book ID", "Book Name", "Author", "Book Type", "Genre", "Publication", "Price"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable);
        if (jTable.getColumnModel().getColumnCount() > 0) {
            jTable.getColumnModel().getColumn(0).setResizable(false);
            jTable.getColumnModel().getColumn(0).setPreferredWidth(1);
            jTable.getColumnModel().getColumn(1).setResizable(false);
            jTable.getColumnModel().getColumn(1).setPreferredWidth(50);
            jTable.getColumnModel().getColumn(2).setResizable(false);
            jTable.getColumnModel().getColumn(2).setPreferredWidth(20);
            jTable.getColumnModel().getColumn(3).setResizable(false);
            jTable.getColumnModel().getColumn(3).setPreferredWidth(10);
            jTable.getColumnModel().getColumn(4).setResizable(false);
            jTable.getColumnModel().getColumn(4).setPreferredWidth(10);
            jTable.getColumnModel().getColumn(5).setResizable(false);
            jTable.getColumnModel().getColumn(5).setPreferredWidth(15);
            jTable.getColumnModel().getColumn(6).setResizable(false);
            jTable.getColumnModel().getColumn(6).setPreferredWidth(1);
        }

        lblAddNewItems.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblAddNewItems.setForeground(new java.awt.Color(248, 148, 6));
        lblAddNewItems.setText("Add New Items");

        newItemsInputPanel.setBackground(new java.awt.Color(44, 62, 80));
        newItemsInputPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(248, 148, 6)));

        lblBookID.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lblBookID.setForeground(new java.awt.Color(255, 255, 255));
        lblBookID.setText("Book ID");

        lblBookName.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lblBookName.setForeground(new java.awt.Color(255, 255, 255));
        lblBookName.setText("Book Name");

        lblAuthor.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lblAuthor.setForeground(new java.awt.Color(255, 255, 255));
        lblAuthor.setText("Author");

        lblBookType.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lblBookType.setForeground(new java.awt.Color(255, 255, 255));
        lblBookType.setText("Book Type");

        btnGrpType.add(rbtnHardCover);
        rbtnHardCover.setForeground(new java.awt.Color(255, 255, 255));
        rbtnHardCover.setText("Hardcover");

        btnGrpType.add(rbtnPaperback);
        rbtnPaperback.setForeground(new java.awt.Color(255, 255, 255));
        rbtnPaperback.setText("Paperback");

        lblGenre.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lblGenre.setForeground(new java.awt.Color(255, 255, 255));
        lblGenre.setText("Genre");

        cmbGenre.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select", "Horror", "Fantasy", "Drama", "Thriller" }));

        lblPublication.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lblPublication.setForeground(new java.awt.Color(255, 255, 255));
        lblPublication.setText("Publication");

        lblPrice.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lblPrice.setForeground(new java.awt.Color(255, 255, 255));
        lblPrice.setText("Price");

        javax.swing.GroupLayout newItemsInputPanelLayout = new javax.swing.GroupLayout(newItemsInputPanel);
        newItemsInputPanel.setLayout(newItemsInputPanelLayout);
        newItemsInputPanelLayout.setHorizontalGroup(
            newItemsInputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(newItemsInputPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(newItemsInputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblBookID, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblBookName, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblAuthor, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblBookType, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblGenre, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblPublication, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(newItemsInputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(newItemsInputPanelLayout.createSequentialGroup()
                        .addComponent(rbtnHardCover)
                        .addGap(18, 18, 18)
                        .addComponent(rbtnPaperback))
                    .addComponent(txtBookID, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbGenre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtBookName, javax.swing.GroupLayout.DEFAULT_SIZE, 323, Short.MAX_VALUE)
                    .addComponent(txtAuthor)
                    .addComponent(txtPublication))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        newItemsInputPanelLayout.setVerticalGroup(
            newItemsInputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(newItemsInputPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(newItemsInputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtBookID, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblBookID, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGroup(newItemsInputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(newItemsInputPanelLayout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(lblBookName, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(newItemsInputPanelLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(txtBookName, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(newItemsInputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblAuthor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtAuthor, javax.swing.GroupLayout.DEFAULT_SIZE, 26, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(newItemsInputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblBookType, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rbtnHardCover)
                    .addComponent(rbtnPaperback))
                .addGap(18, 18, 18)
                .addGroup(newItemsInputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblGenre, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbGenre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(newItemsInputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblPublication, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPublication, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(newItemsInputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        btnAdd.setText("Add Item");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnClear.setText("Clear");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        lblLogo.setFont(new java.awt.Font("Mistral", 0, 43)); // NOI18N
        lblLogo.setForeground(new java.awt.Color(248, 148, 6));
        lblLogo.setText("BookMark");

        separator.setBackground(new java.awt.Color(248, 148, 6));
        separator.setForeground(new java.awt.Color(248, 148, 6));

        javax.swing.GroupLayout mainPanelLayout = new javax.swing.GroupLayout(mainPanel);
        mainPanel.setLayout(mainPanelLayout);
        mainPanelLayout.setHorizontalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addGap(258, 258, 258)
                        .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(37, 37, 37)
                        .addComponent(btnClear, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(mainPanelLayout.createSequentialGroup()
                                .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnSearchPrice, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(mainPanelLayout.createSequentialGroup()
                                .addComponent(cmbSelectGenre, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnSearchGenre)))))
                .addGap(0, 278, Short.MAX_VALUE))
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addComponent(newItemsInputPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addComponent(lblAddNewItems, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(separator, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addGap(314, 314, 314)
                .addComponent(lblLogo)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        mainPanelLayout.setVerticalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblLogo, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(separator, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSearchPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbSelectGenre, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSearchGenre, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblAddNewItems, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(newItemsInputPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnClear, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        fileMenu.setText("File");

        fileMenuOpen.setText("Open");
        fileMenuOpen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fileMenuOpenActionPerformed(evt);
            }
        });
        fileMenu.add(fileMenuOpen);

        fileMenuExit.setText("Exit");
        fileMenuExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fileMenuExitActionPerformed(evt);
            }
        });
        fileMenu.add(fileMenuExit);

        menuBar.add(fileMenu);

        editMenu.setText("Edit");

        editMenuDeleteRow.setText("Delete Selected Row");
        editMenuDeleteRow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editMenuDeleteRowActionPerformed(evt);
            }
        });
        editMenu.add(editMenuDeleteRow);

        editMenuClearTable.setText("Clear Table");
        editMenuClearTable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editMenuClearTableActionPerformed(evt);
            }
        });
        editMenu.add(editMenuClearTable);

        menuBar.add(editMenu);

        helpMenu.setText("Help");

        helpMenuManual.setText("Manual");
        helpMenuManual.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                helpMenuManualActionPerformed(evt);
            }
        });
        helpMenu.add(helpMenuManual);

        menuBar.add(helpMenu);

        setJMenuBar(menuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private void clearInput(){          //method for clearing the data entry section
        txtBookName.setText("");
        txtBookID.setText("");
        txtPublication.setText("");
        txtPrice.setText("");
        txtAuthor.setText("");
        txtSearch.setText("");
        cmbSelectGenre.setSelectedIndex(0);
        btnGrpType.clearSelection();
        cmbGenre.setSelectedIndex(0);
    }
    
    private DefaultTableModel tableModel(){             //method for returning the default table model
        DefaultTableModel model = (DefaultTableModel)jTable.getModel();
        return model;
    }
    //method for adding data in the table from external text file
    private void fileMenuOpenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fileMenuOpenActionPerformed
        File selectedFile = null;              
        JFileChooser fileChooser = new JFileChooser(); //using the file chooser property of java swing
        fileChooser.setCurrentDirectory(new File(".//src//"));
        int result = fileChooser.showOpenDialog(this);
        selectedFile = fileChooser.getSelectedFile();
        if (selectedFile!=null) {   //validation if a file is selected or not
            try{
                BufferedReader br = new BufferedReader(new FileReader (selectedFile));

                Object[] tableLines = br.lines().toArray();
                for (int i = 0; i < tableLines.length; i++){

                    String line = tableLines[i].toString().trim();
                    String[] dataRow = line.split(",");


                    int BookID = Integer.parseInt(dataRow[0]);
                    String BookName = dataRow[1];
                    String Author = dataRow[2];
                    String BookType = dataRow[3];
                    String Genre = dataRow[4];
                    String Publication = dataRow [5];
                    double Price = Double.parseDouble(dataRow[6]);
                    LL.add(new DataModel(BookID,BookName,Author,BookType,Genre,Publication,Price));
                    Object[] rowData={BookID,BookName,Author,BookType,Genre,Publication,Price};
                    tableModel().addRow(rowData);
                }
            } catch (Exception ex){ //validation for selecting file with wrong format
                JOptionPane.showMessageDialog(rootPane,"An Error Occured While Selecting the File!","Error",JOptionPane.ERROR_MESSAGE);
            }
        }else{
            JOptionPane.showMessageDialog(rootPane,"File Not Selected.");
        }
    }//GEN-LAST:event_fileMenuOpenActionPerformed

    private void fileMenuExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fileMenuExitActionPerformed
        System.exit(0); //closing the program
    }//GEN-LAST:event_fileMenuExitActionPerformed
    //method used for openeing the user manual
    private void helpMenuManualActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_helpMenuManualActionPerformed
        try {
            File file1 = new File(".//src//user_manual.pdf");
            Desktop.getDesktop().open(file1);
        } catch (IOException ex) {  //validation if the manual exists
            JOptionPane.showMessageDialog(rootPane,"The program cannot locate the help file.","Error",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_helpMenuManualActionPerformed
    
    private void editMenuDeleteRowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editMenuDeleteRowActionPerformed
        //method to delete a single row in the table
        if(jTable.getSelectedRow()!=-1){   //validation if a row is selected
            int bookID=(Integer)jTable.getValueAt(jTable.getSelectedRow(), 0);
            for(int i=0;i<=LL.size()-1;i++){
                if(LL.get(i).getBookID()==bookID){
                    LL.remove(i);
                }
            }
            tableModel().removeRow(jTable.getSelectedRow());
            JOptionPane.showMessageDialog(rootPane, "Selected row deleted successfully");
        }else{
            JOptionPane.showMessageDialog(rootPane,"Please Select a Row First!","Error",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_editMenuDeleteRowActionPerformed

    private void editMenuClearTableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editMenuClearTableActionPerformed
        //method to clear all the data in the table from the menu bar
        tableModel().setRowCount(0);
        LL.clear();
    }//GEN-LAST:event_editMenuClearTableActionPerformed

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        //method to clear all the data in the table using clear button
        clearInput();
    }//GEN-LAST:event_btnClearActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        //method for the function of add button
        rbtnHardCover.setActionCommand("Hard Cover");
        rbtnPaperback.setActionCommand("Paperback");
        if (txtPublication.getText().equals("")||cmbGenre.getSelectedIndex()==0|| txtBookID.getText().equals("") ||
            txtBookName.getText().equals("")|| txtAuthor.getText().equals("")||txtPrice.getText().equals("")||btnGrpType.getSelection()==null){
            //validation if the data to be added are filled 
            JOptionPane.showMessageDialog(rootPane,"Invalid Input!","Error",JOptionPane.ERROR_MESSAGE);
        }else{
            try{
                int bookID= Integer.parseInt(txtBookID.getText());
                double price= Double.parseDouble(txtPrice.getText());
                String bookName=txtBookName.getText();
                String author=txtAuthor.getText();
                String genre=(String)cmbGenre.getSelectedItem();
                String publication=txtPublication.getText();
                String bookType="";

                if (rbtnHardCover.isSelected()){
                    bookType= rbtnHardCover.getActionCommand();
                }else if (rbtnPaperback.isSelected()){
                    bookType= rbtnPaperback.getActionCommand();
                }
                
                DataModel rowData=new DataModel(bookID,bookName,author,bookType,genre,publication,price);   //creating an instance of DataModel
                Object[] objDataList = {bookID,bookName,author,bookType,genre,publication,price};   //creating linked list 
                
                LL.add(rowData);    //adding data in the instance
                tableModel().addRow(objDataList);   //adding data in the table
                
            }catch(NumberFormatException e){    
                //validation if the data is filled with correct data type
                JOptionPane.showMessageDialog(rootPane,"Invalid Input!","Error",JOptionPane.ERROR_MESSAGE);
            }
        }

    }//GEN-LAST:event_btnAddActionPerformed

    private void btnSearchGenreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchGenreActionPerformed
        //method for searching according to genre
        if (cmbSelectGenre.getSelectedIndex()==0){  //validation if no genre is selected
            JOptionPane.showMessageDialog(rootPane,"Please Select A Genre First!","Error",JOptionPane.ERROR_MESSAGE);
        }else{
            String Genre=(String)cmbSelectGenre.getSelectedItem();
            LinkedList<DataModel>LL2 = new Algorithms().LinearSearch(LL,Genre); //call LinearSearch method
            int quantity=LL2.size();
            String books="|";
            for(int i=0;i<=LL2.size()-1;i++){
                books=books+LL2.get(i).getBookName()+" | ";
            }
        JOptionPane.showMessageDialog(rootPane, "The "+Genre+" Genre has "+quantity+" books: "+books);  //showing the search output
        }
    }//GEN-LAST:event_btnSearchGenreActionPerformed

    private void cmbSelectGenreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbSelectGenreActionPerformed

    }//GEN-LAST:event_cmbSelectGenreActionPerformed

    private void btnSearchPriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchPriceActionPerformed
        //method to search book by price
        if(txtSearch.getText().isEmpty()){  //validation if the text field is empty
            JOptionPane.showMessageDialog(rootPane,"Please Enter a Price for Searching.","Error",JOptionPane.ERROR_MESSAGE);
        }else{
            try{
                double searchedPrice=Double.parseDouble(txtSearch.getText());
                DataModel a = new Algorithms().BinarySearch(new Algorithms().SelectionSort(LL),0,LL.size()-1,searchedPrice); //call BinarySearch method
                if(a==null){
                    JOptionPane.showMessageDialog(rootPane, "No Macth Found.");
                }else{
                    String bookID = "Book Id: "+a.getBookID()+" | ";
                    String bookName = "Book Name: "+a.getBookName()+" | ";
                    String author = "Author: "+a.getAuthor()+" | ";
                    String genre = "Genre: "+a.getGenre()+" | ";
                    String bookType = "Book Type: "+a.getBookType()+" | ";
                    String publication ="Publication: "+a.getPublication()+" | ";
                    String price = "Price: "+a.getPrice();
                    JOptionPane.showMessageDialog(rootPane, " Matched Item:\n "+bookID+bookName+author+genre+bookType+publication+price);
                }
            //validations for search by price
            }catch(NumberFormatException e){
                JOptionPane.showMessageDialog(rootPane,"Invalid Input!","Error",JOptionPane.ERROR_MESSAGE);
            }catch(StackOverflowError e){
                JOptionPane.showMessageDialog(rootPane, "No Macth Found.");
            }catch(NoSuchElementException e){
                JOptionPane.showMessageDialog(rootPane,"The Table is Empty!","Error",JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_btnSearchPriceActionPerformed

    private void txtSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSearchActionPerformed

    }//GEN-LAST:event_txtSearchActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(App.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(App.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(App.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(App.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new App().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnClear;
    private javax.swing.ButtonGroup btnGrpType;
    private javax.swing.JButton btnSearchGenre;
    private javax.swing.JButton btnSearchPrice;
    private javax.swing.JComboBox<String> cmbGenre;
    private javax.swing.JComboBox<String> cmbSelectGenre;
    private javax.swing.JMenu editMenu;
    private javax.swing.JMenuItem editMenuClearTable;
    private javax.swing.JMenuItem editMenuDeleteRow;
    private javax.swing.JMenu fileMenu;
    private javax.swing.JMenuItem fileMenuExit;
    private javax.swing.JMenuItem fileMenuOpen;
    private javax.swing.JMenu helpMenu;
    private javax.swing.JMenuItem helpMenuManual;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable;
    private javax.swing.JLabel lblAddNewItems;
    private javax.swing.JLabel lblAuthor;
    private javax.swing.JLabel lblBookID;
    private javax.swing.JLabel lblBookName;
    private javax.swing.JLabel lblBookType;
    private javax.swing.JLabel lblGenre;
    private javax.swing.JLabel lblLogo;
    private javax.swing.JLabel lblPrice;
    private javax.swing.JLabel lblPublication;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JPanel newItemsInputPanel;
    private javax.swing.JRadioButton rbtnHardCover;
    private javax.swing.JRadioButton rbtnPaperback;
    private javax.swing.JSeparator separator;
    private javax.swing.JTextField txtAuthor;
    private javax.swing.JTextField txtBookID;
    private javax.swing.JTextField txtBookName;
    private javax.swing.JTextField txtPrice;
    private javax.swing.JTextField txtPublication;
    private javax.swing.JTextField txtSearch;
    // End of variables declaration//GEN-END:variables
}
